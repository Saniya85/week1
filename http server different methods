const http = require('http');

let todos = ['filesystem,path,read and write script file', 'Basic http server']; // Sample todo list

const server = http.createServer((req, res) => {
    const { method, url } = req; 

    res.setHeader('Content-Type', 'application/json'); 

    if (url === '/todos') {
        if (method === 'GET') {
            res.end(JSON.stringify(todos)); 
        } 
        
        else if (method === 'POST') {
            let body = '';
            req.on('data', chunk => (body += chunk));
            req.on('end', () => {
                const newTask = JSON.parse(body).task;
                todos.push(newTask); // Add task
                res.end(JSON.stringify({ message: 'Task added', todos }));
            });
        } 
        
        else if (method === 'PUT') {
            let body = '';
            req.on('data', chunk => (body += chunk));
            req.on('end', () => {
                const { oldTask, newTask } = JSON.parse(body);
                const index = todos.indexOf(oldTask);
                if (index !== -1) {
                    todos[index] = newTask;
                    res.end(JSON.stringify({ message: 'Task updated', todos }));
                } else {
                    res.writeHead(404);
                    res.end(JSON.stringify({ message: 'Task not found' }));
                }
            });
        } 
        
        else if (method === 'DELETE') {
            let body = '';
            req.on('data', chunk => (body += chunk));
            req.on('end', () => {
                const { task } = JSON.parse(body);
                todos = todos.filter(t => t !== task);
                res.end(JSON.stringify({ message: 'Task deleted', todos }));
            });
        } 
        
        else {
            res.writeHead(405);
            res.end(JSON.stringify({ message: 'Method not allowed' }));
        }
    } else {
        res.writeHead(404);
        res.end(JSON.stringify({ message: 'Not Found' }));
    }
});

server.listen(3000, () => {
    console.log('Server running at http://localhost:3000');
});
